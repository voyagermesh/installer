/*
Copyright The Voyager Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package voyagermesh.dev.installer.apis.installer.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

message CloudConfig {
  // +optional
  optional bool enabled = 1;

  optional string hostPath = 2;
}

message ContianerRef {
  optional ImageRef imageRef = 1;

  // Compute Resources required by the sidecar container.
  // +optional
  optional k8s.io.api.core.v1.ResourceRequirements resources = 2;

  // Security options the pod should run with.
  // +optional
  optional k8s.io.api.core.v1.SecurityContext securityContext = 3;
}

message HealthcheckSpec {
  // +optional
  optional bool enabled = 1;
}

message ImageRef {
  optional string registry = 1;

  optional string repository = 2;

  optional string tag = 3;
}

message ServiceAccountSpec {
  optional bool create = 1;

  // +optional
  optional string name = 2;

  // +optional
  map<string, string> annotations = 3;
}

message ServingCerts {
  optional bool generate = 1;

  // +optional
  optional string caCrt = 2;

  // +optional
  optional string serverCrt = 3;

  // +optional
  optional string serverKey = 4;
}

message Templates {
  optional string cfgmap = 1;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=voyageroperators,singular=voyageroperator,categories={voyager,appscode}
message VoyagerOperator {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional VoyagerOperatorSpec spec = 2;
}

// VoyagerOperatorList is a list of VoyagerOperators
message VoyagerOperatorList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of VoyagerOperator CRD objects
  repeated VoyagerOperator items = 2;
}

// VoyagerOperatorSpec is the schema for Voyager Operator values file
message VoyagerOperatorSpec {
  // +optional
  optional string nameOverride = 1;

  // +optional
  optional string fullnameOverride = 2;

  optional int32 replicaCount = 3;

  optional ContianerRef voyager = 4;

  optional ImageRef haproxy = 5;

  optional ImageRef cleaner = 6;

  optional string imagePullPolicy = 7;

  // +optional
  repeated string imagePullSecrets = 8;

  // +optional
  optional string cloudProvider = 9;

  // +optional
  optional string cloudConfig = 10;

  // +optional
  optional bool criticalAddon = 11;

  // +optional
  optional int32 logLevel = 12;

  optional CloudConfig persistence = 13;

  // +optional
  map<string, string> annotations = 14;

  // +optional
  map<string, string> podAnnotations = 15;

  // +optional
  map<string, string> nodeSelector = 16;

  // If specified, the pod's tolerations.
  // +optional
  repeated k8s.io.api.core.v1.Toleration tolerations = 17;

  // If specified, the pod's scheduling constraints
  // +optional
  optional k8s.io.api.core.v1.Affinity affinity = 18;

  // PodSecurityContext holds pod-level security attributes and common container settings.
  // Optional: Defaults to empty.  See type description for default values of each field.
  // +optional
  optional k8s.io.api.core.v1.PodSecurityContext podSecurityContext = 19;

  optional ServiceAccountSpec serviceAccount = 20;

  // +optional
  optional string ingressClass = 21;

  optional WebHookSpec apiserver = 22;

  // +optional
  optional bool enableAnalytics = 23;

  // +optional
  optional bool restrictToOperatorNamespace = 24;

  optional Templates templates = 25;
}

message WebHookSpec {
  optional int32 groupPriorityMinimum = 1;

  optional int32 versionPriority = 2;

  optional bool enableValidatingWebhook = 3;

  optional string ca = 4;

  // +optional
  optional bool bypassValidatingWebhookXray = 5;

  optional bool useKubeapiserverFqdnForAks = 6;

  optional HealthcheckSpec healthcheck = 7;

  optional ServingCerts servingCerts = 8;
}

